"""Initial migration

Revision ID: 0cf9c0be220d
Revises: 
Create Date: 2025-05-08 23:39:52.051607

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0cf9c0be220d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Adiciona coluna user_id
    op.add_column('metrics', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key(
        'fk_metrics_user_id',
        'metrics', 'users',
        ['user_id'], ['id'],
        ondelete='CASCADE'
    )
    
    # Renomeia date para collected_at e muda tipo para TIMESTAMP
    op.alter_column('metrics', 'date',
               new_column_name='collected_at',
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_type=sa.DATE(),
               comment='Data e hora da coleta da métrica',
               existing_comment='Data da coleta da métrica',
               existing_nullable=False)
    
    # Atualiza outras colunas
    op.alter_column('metrics', 'id',
               existing_type=sa.INTEGER(),
               comment='Identificador único da métrica',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('metrics', 'platform_id',
               existing_type=sa.INTEGER(),
               comment='ID da plataforma relacionada',
               existing_nullable=False)
    op.alter_column('metrics', 'metric_name',
               existing_type=sa.VARCHAR(length=100),
               comment='Nome da métrica (ex: seguidores, curtidas)',
               existing_nullable=False)
    op.alter_column('metrics', 'value',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               comment='Valor numérico da métrica',
               existing_nullable=False)
    op.alter_column('metrics', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Data de criação do registro',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    
    # Remove constraint única antiga e cria nova com collected_at
    op.drop_constraint('unique_metric_entry', 'metrics', type_='unique')
    op.create_unique_constraint(
        'unique_metric_entry',
        'metrics',
        ['platform_id', 'metric_name', 'collected_at']
    )
    
    # Cria novos índices
    op.create_index(op.f('ix_metrics_collected_at'), 'metrics', ['collected_at'], unique=False)
    op.create_index(op.f('ix_metrics_user_id'), 'metrics', ['user_id'], unique=False)
    op.create_index(op.f('ix_metrics_user_collected'), 'metrics', ['user_id', 'collected_at'], unique=False)
    
    # Atualiza comentário da tabela
    op.create_table_comment(
        'metrics',
        'Armazena as métricas coletadas das plataformas',
        existing_comment=None,
        schema=None
    )
    op.alter_column('platforms', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Identificador Ãºnico da plataforma',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('platforms', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Nome da plataforma (ex: Twitter, Instagram)',
               existing_nullable=False)
    op.alter_column('platforms', 'url',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='URL base da plataforma',
               existing_nullable=True)
    op.alter_column('platforms', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Data de criaÃ§Ã£o do registro',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_platforms_id'), 'platforms', ['id'], unique=False)
    op.drop_table_comment(
        'platforms',
        existing_comment='Armazena as plataformas de redes sociais monitoradas',
        schema=None
    )
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Identificador Ãºnico do usuÃ¡rio',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Nome de usuÃ¡rio para login',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='E-mail do usuÃ¡rio',
               existing_nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Senha criptografada',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Indica se o usuÃ¡rio estÃ¡ ativo',
               existing_nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Data de criaÃ§Ã£o do registro',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_table_comment(
        'users',
        existing_comment='Armazena os usuÃ¡rios do sistema',
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'users',
        'Armazena os usuÃ¡rios do sistema',
        existing_comment=None,
        schema=None
    )
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Data de criaÃ§Ã£o do registro',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='Indica se o usuÃ¡rio estÃ¡ ativo',
               existing_nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               comment='Senha criptografada',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment='E-mail do usuÃ¡rio',
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment='Nome de usuÃ¡rio para login',
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment='Identificador Ãºnico do usuÃ¡rio',
               existing_nullable=False,
               autoincrement=True)
    op.create_table_comment(
        'platforms',
        'Armazena as plataformas de redes sociais monitoradas',
        existing_comment=None,
        schema=None
    )
    op.drop_index(op.f('ix_platforms_id'), table_name='platforms')
    op.alter_column('platforms', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Data de criaÃ§Ã£o do registro',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('platforms', 'url',
               existing_type=sa.VARCHAR(length=255),
               comment='URL base da plataforma',
               existing_nullable=True)
    op.alter_column('platforms', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment='Nome da plataforma (ex: Twitter, Instagram)',
               existing_nullable=False)
    op.alter_column('platforms', 'id',
               existing_type=sa.INTEGER(),
               comment='Identificador Ãºnico da plataforma',
               existing_nullable=False,
               autoincrement=True)
    op.create_table_comment(
        'metrics',
        'Armazena as mÃ©tricas coletadas das plataformas',
        existing_comment=None,
        schema=None
    )
    op.drop_index(op.f('ix_metrics_id'), table_name='metrics')
    op.create_unique_constraint('unique_metric_entry', 'metrics', ['platform_id', 'metric_name', 'date'])
    op.alter_column('metrics', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Data de criaÃ§Ã£o do registro',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('metrics', 'date',
               existing_type=sa.DATE(),
               comment='Data da coleta da mÃ©trica',
               existing_nullable=False)
    op.alter_column('metrics', 'value',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               comment='Valor numÃ©rico da mÃ©trica',
               existing_nullable=False)
    op.alter_column('metrics', 'metric_name',
               existing_type=sa.VARCHAR(length=100),
               comment='Nome da mÃ©trica (ex: seguidores, curtidas)',
               existing_nullable=False)
    op.alter_column('metrics', 'platform_id',
               existing_type=sa.INTEGER(),
               comment='ID da plataforma relacionada',
               existing_nullable=False)
    op.alter_column('metrics', 'id',
               existing_type=sa.INTEGER(),
               comment='Identificador Ãºnico da mÃ©trica',
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
